// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package terraform-template

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CloudInitConfig struct {
	s *pulumi.ResourceState
}

// NewCloudInitConfig registers a new resource with the given unique name, arguments, and options.
func NewCloudInitConfig(ctx *pulumi.Context,
	name string, args *CloudInitConfigArgs, opts ...pulumi.ResourceOpt) (*CloudInitConfig, error) {
	if args == nil || args.Parts == nil {
		return nil, errors.New("missing required argument 'Parts'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["base64Encode"] = nil
		inputs["gzip"] = nil
		inputs["parts"] = nil
	} else {
		inputs["base64Encode"] = args.Base64Encode
		inputs["gzip"] = args.Gzip
		inputs["parts"] = args.Parts
	}
	inputs["rendered"] = nil
	s, err := ctx.RegisterResource("terraform-template:index/cloudInitConfig:CloudInitConfig", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CloudInitConfig{s: s}, nil
}

// GetCloudInitConfig gets an existing CloudInitConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudInitConfig(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CloudInitConfigState, opts ...pulumi.ResourceOpt) (*CloudInitConfig, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["base64Encode"] = state.Base64Encode
		inputs["gzip"] = state.Gzip
		inputs["parts"] = state.Parts
		inputs["rendered"] = state.Rendered
	}
	s, err := ctx.ReadResource("terraform-template:index/cloudInitConfig:CloudInitConfig", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CloudInitConfig{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *CloudInitConfig) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *CloudInitConfig) ID() *pulumi.IDOutput {
	return r.s.ID()
}

func (r *CloudInitConfig) Base64Encode() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["base64Encode"])
}

func (r *CloudInitConfig) Gzip() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["gzip"])
}

func (r *CloudInitConfig) Parts() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["parts"])
}

// rendered cloudinit configuration
func (r *CloudInitConfig) Rendered() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["rendered"])
}

// Input properties used for looking up and filtering CloudInitConfig resources.
type CloudInitConfigState struct {
	Base64Encode interface{}
	Gzip interface{}
	Parts interface{}
	// rendered cloudinit configuration
	Rendered interface{}
}

// The set of arguments for constructing a CloudInitConfig resource.
type CloudInitConfigArgs struct {
	Base64Encode interface{}
	Gzip interface{}
	Parts interface{}
}
