// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package terraform-template

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type File struct {
	s *pulumi.ResourceState
}

// NewFile registers a new resource with the given unique name, arguments, and options.
func NewFile(ctx *pulumi.Context,
	name string, args *FileArgs, opts ...pulumi.ResourceOpt) (*File, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["filename"] = nil
		inputs["template"] = nil
		inputs["vars"] = nil
	} else {
		inputs["filename"] = args.Filename
		inputs["template"] = args.Template
		inputs["vars"] = args.Vars
	}
	inputs["rendered"] = nil
	s, err := ctx.RegisterResource("terraform-template:index/file:File", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &File{s: s}, nil
}

// GetFile gets an existing File resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFile(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FileState, opts ...pulumi.ResourceOpt) (*File, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["filename"] = state.Filename
		inputs["rendered"] = state.Rendered
		inputs["template"] = state.Template
		inputs["vars"] = state.Vars
	}
	s, err := ctx.ReadResource("terraform-template:index/file:File", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &File{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *File) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *File) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// file to read template from
func (r *File) Filename() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["filename"])
}

// rendered template
func (r *File) Rendered() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["rendered"])
}

// Contents of the template
func (r *File) Template() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["template"])
}

// variables to substitute
func (r *File) Vars() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["vars"])
}

// Input properties used for looking up and filtering File resources.
type FileState struct {
	// file to read template from
	Filename interface{}
	// rendered template
	Rendered interface{}
	// Contents of the template
	Template interface{}
	// variables to substitute
	Vars interface{}
}

// The set of arguments for constructing a File resource.
type FileArgs struct {
	// file to read template from
	Filename interface{}
	// Contents of the template
	Template interface{}
	// variables to substitute
	Vars interface{}
}
