// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

export class CloudInitConfig extends pulumi.CustomResource {
    /**
     * Get an existing CloudInitConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudInitConfigState): CloudInitConfig {
        return new CloudInitConfig(name, <any>state, { id });
    }

    public readonly base64Encode: pulumi.Output<boolean | undefined>;
    public readonly gzip: pulumi.Output<boolean | undefined>;
    public readonly parts: pulumi.Output<{ content: string, contentType?: string, filename?: string, mergeType?: string }[]>;
    /**
     * rendered cloudinit configuration
     */
    public /*out*/ readonly rendered: pulumi.Output<string>;

    /**
     * Create a CloudInitConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudInitConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudInitConfigArgs | CloudInitConfigState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: CloudInitConfigState = argsOrState as CloudInitConfigState | undefined;
            inputs["base64Encode"] = state ? state.base64Encode : undefined;
            inputs["gzip"] = state ? state.gzip : undefined;
            inputs["parts"] = state ? state.parts : undefined;
            inputs["rendered"] = state ? state.rendered : undefined;
        } else {
            const args = argsOrState as CloudInitConfigArgs | undefined;
            if (!args || args.parts === undefined) {
                throw new Error("Missing required property 'parts'");
            }
            inputs["base64Encode"] = args ? args.base64Encode : undefined;
            inputs["gzip"] = args ? args.gzip : undefined;
            inputs["parts"] = args ? args.parts : undefined;
            inputs["rendered"] = undefined /*out*/;
        }
        super("terraform-template:index/cloudInitConfig:CloudInitConfig", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudInitConfig resources.
 */
export interface CloudInitConfigState {
    readonly base64Encode?: pulumi.Input<boolean>;
    readonly gzip?: pulumi.Input<boolean>;
    readonly parts?: pulumi.Input<pulumi.Input<{ content: pulumi.Input<string>, contentType?: pulumi.Input<string>, filename?: pulumi.Input<string>, mergeType?: pulumi.Input<string> }>[]>;
    /**
     * rendered cloudinit configuration
     */
    readonly rendered?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudInitConfig resource.
 */
export interface CloudInitConfigArgs {
    readonly base64Encode?: pulumi.Input<boolean>;
    readonly gzip?: pulumi.Input<boolean>;
    readonly parts: pulumi.Input<pulumi.Input<{ content: pulumi.Input<string>, contentType?: pulumi.Input<string>, filename?: pulumi.Input<string>, mergeType?: pulumi.Input<string> }>[]>;
}
